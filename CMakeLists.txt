cmake_minimum_required(VERSION 3.1)
project(image_processing_100)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g -Wall -Wextra -Werror -O3 -std=c++17 -msse4.1 -fno-tree-vectorize")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-deprecated-declarations") # Supress NEON_2_SSE warnings.
set(NVCCFLAGS       "${NVCCFLAGS}       -g -Wall -Wextra -Werror -O3 -x=cu -std=c++17 -fmad=false")

find_package(CUDA REQUIRED)
if(CUDA_FOUND)
    message("CUDA version: " ${CUDA_VERSION})
else()
    message(FATAL_ERROR "CUDA not found.")
endif()

find_package(OpenCV REQUIRED)
if (OpenCV_FOUND)
    message("OpenCV version: " ${OpenCV_VERSION})
else()
    message(FATAL_ERROR "OpenCV not found.")
endif()

link_libraries(${CUDA_LIBRARIES} ${OpenCV_LIBS})
include_directories(${CUDA_INCLUDE_DIRS} ${OpenCV_INCLUDE_DIRS})
include_directories(${PROJECT_SOURCE_DIR}/include ${PROJECT_SOURCE_DIR}/3rdparty/neon2sse)

add_subdirectory(1-rgb_to_bgr)
add_subdirectory(2-rgb_to_gray)
add_subdirectory(3-binarization)
add_subdirectory(4-otsu_binarization)
add_subdirectory(5-rgb_to_hsv)
add_subdirectory(6-color_reduction)
add_subdirectory(7-average_pooling)
add_subdirectory(8-max_pooling)
add_subdirectory(9-gaussian_filter)
add_subdirectory(10-median_filter)
add_subdirectory(11-mean_filter)
add_subdirectory(47-dilation)
